(()=>{"use strict";var t={147:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ActionPoints=void 0,e.ActionPoints=class{constructor(){this.span=document.getElementById("actionPointsSpan"),this.current=1,this.total=1,this.tentative=0}startTurn(){10!==this.total&&this.total++,this.current=this.total,this.render()}tentativeSpend(t){this.tentative=t,this.render()}spend(){this.current-=this.tentative,this.tentative=0,this.render()}clearSpend(){this.tentative=0,this.render()}render(){let t="";t+="ðŸŸ©".repeat(this.current-this.tentative),t+="ðŸŸ¨".repeat(this.tentative),t+="ðŸŸ¥".repeat(this.total-this.current),this.span.textContent=t}}},68:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ComPlayer=void 0;const i=n(147),s=n(924),a=n(627);class r extends a.Player{constructor(t,e){super(),this.availableIngredients=["white bread","bacon"],this.ingredientCounts=Array(this.availableIngredients.length).fill(0),this.actionPoints=new i.ActionPoints,this.name="Computer Player",this.boardDiv=t,this.scoresDiv=e,this.sandwiches=new Map}startDeckSelect(){this.deckSelectEndCallback()}startGame(){for(let t=0;t<this.ingredientCounts.length;++t)this.ingredientCounts[t]=0;this.constructDOM(),this.startTurn()}constructDOM(){this.boardDiv.innerHTML="",this.createEmptyStack();var t=document.createElement("div");t.innerText="Score: ",this.scoreSpan=document.createElement("span"),t.appendChild(this.scoreSpan),this.scoreSpan.innerText="0",this.scoresDiv.appendChild(t)}startTurn(){this.turnEndCallback()}getAnimationActions(){return this.actionPoints.startTurn(),this.drawCards(),this.playCards(),super.getAnimationActions()}drawCards(){const t=this.availableIngredients.length;for(let e=0;e<3;++e){const e=Math.floor(Math.random()*t);this.ingredientCounts[e]++}}canPlay(t){return s.ingredients.get(this.availableIngredients[t]).cost<=this.actionPoints.current&&this.ingredientCounts[t]>0}playCards(){const t=this.availableIngredients.length;for(let e=0;e<3;++e){const e=Math.floor(Math.random()*t),n=s.ingredients.get(this.availableIngredients[e]);if(this.canPlay(e)){const t=[];for(const[e,i]of this.sandwiches)i.canAddIngredient(n)&&t.push(e);if(0===t.length)continue;const e=Math.floor(Math.random()*t.length);this.sandwiches.get(t[e]).addIngredient(n)}}}}e.ComPlayer=r},589:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SCORE_THRESHOLD=e.MAX_SANDWICH_COUNT=e.ANIM_TIMEOUT=void 0,e.ANIM_TIMEOUT=250,e.MAX_SANDWICH_COUNT=6,e.SCORE_THRESHOLD=100},784:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Game=void 0;const i=n(589),s=n(233);e.Game=class{constructor(t){this.deckSelects=0,this.turnEnds=0,this.animationEnds=0,this.players=t;for(const e of t)e.turnEndCallback=this.endTurnForPlayer.bind(this),e.deckSelectEndCallback=this.selectDeckForPlayer.bind(this),e.sandwichAnimationEndCallback=this.playAnimation.bind(this),e.startDeckSelect();this.turnState=s.TurnState.SELECTING_DECK}selectDeckForPlayer(){if(this.deckSelects++,this.deckSelects===this.players.length){this.deckSelects=0,this.turnState=s.TurnState.TURN_ACTIVE;for(const t of this.players)t.startGame()}}endTurnForPlayer(){if(this.turnEnds++,this.turnEnds===this.players.length){this.turnEnds=0,this.turnState=s.TurnState.ANIMS_PLAYING,this.animationCounter=0,this.animations=[];for(const t of this.players){const e=t.getAnimationActions();this.animations.push(...e)}this.playAnimation()}}playAnimation(){if(this.animationCounter>=this.animations.length){this.turnState=s.TurnState.TURN_ACTIVE;let t=[];for(const e of this.players)e.score>=i.SCORE_THRESHOLD&&t.push(e.name);if(0!==t.length)alert("Winner: "+t.join(" and "));else for(const t of this.players)t.startTurn()}else this.animations[this.animationCounter++].animate()}}},924:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ingredients=void 0;const i=n(233),s={name:"white bread",cost:1,power:1,effect:t=>{},type:i.IngredientType.BREAD,effectText:"",flavorText:"the plainest option"},a={name:"bacon",cost:1,power:1,effect:t=>{t.ingredients.map((t=>(t.power++,t)))},type:i.IngredientType.MEAT,effectText:"on complete, add one to each ingredient in this sandwich",flavorText:"bacon goes on everything"},r=new Map;e.ingredients=r,r.set("bacon",a),r.set("white bread",s)},346:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LocalPlayer=void 0;const i=n(147),s=n(924),a=n(627);class r extends a.Player{constructor(t,e,n){super(),this.availableIngredients=["white bread","bacon"],this.ingredientCounts=Array(this.availableIngredients.length).fill(0),this.ingredientDOMs=[],this.actionPoints=new i.ActionPoints,this.endTurnButton=document.getElementById("endTurnButton"),this.name="Local Player",this.ingredientDiv=t,this.boardDiv=e,this.scoresDiv=n,this.sandwiches=new Map}startDeckSelect(){this.deckSelectEndCallback()}startGame(){for(let t=0;t<this.ingredientCounts.length;++t)this.ingredientCounts[t]=0;this.constructDOM(),this.startTurn()}constructDOM(){this.ingredientDiv.innerHTML="";for(let t=0;t<this.availableIngredients.length;++t){const e=document.createElement("div");e.className="tooltip",e.draggable=!0;const n=document.createElement("span");e.appendChild(n);const i=document.createElement("span");i.className="tooltipText";const a=s.ingredients.get(this.availableIngredients[t]);i.innerHTML=`${a.name}: ${a.cost}/${a.power}<br><br>`,""!==a.effectText&&(i.innerHTML+=`${a.effectText}<br><br>`),i.innerHTML+=`<i>${a.flavorText}</i>`,e.ondragstart=this.dragCard.bind(this,t),e.ondragend=this.stopDrag.bind(this),e.onmouseover=this.hoverCard.bind(this,t),e.onmouseout=this.unhoverCard.bind(this),e.appendChild(i),this.ingredientDiv.appendChild(e),this.ingredientDOMs.push(n)}this.boardDiv.innerHTML="",this.createEmptyStack();var t=document.createElement("div");t.innerText="Score: ",this.scoreSpan=document.createElement("span"),t.appendChild(this.scoreSpan),this.scoreSpan.innerText="0",this.scoresDiv.appendChild(t),this.render(),this.endTurnButton.onclick=this.endTurn.bind(this)}render(){for(let t=0;t<this.ingredientDOMs.length;++t){const e=this.availableIngredients[t];this.ingredientDOMs[t].textContent=`${e}: ${this.ingredientCounts[t]}`}this.actionPoints.render()}startTurn(){this.endTurnButton.textContent="End turn",this.endTurnButton.disabled=!1,this.actionPoints.startTurn(),this.drawCards(),this.render()}endTurn(){this.endTurnButton.textContent="waiting...",this.endTurnButton.disabled=!0,this.turnEndCallback()}drawCards(){const t=this.availableIngredients.length;for(let e=0;e<3;++e){const e=Math.floor(Math.random()*t);this.ingredientCounts[e]++}this.render()}createEmptyStack(){const t=super.createEmptyStack();return null!==t&&(t.ondrop=this.dropHandler.bind(this,this.sandwichCount-1),t.ondragenter=this.canDropCurrentlyHeld.bind(this,this.sandwichCount-1),t.ondragover=this.canDropCurrentlyHeld.bind(this,this.sandwichCount-1)),t}canPlay(t){return s.ingredients.get(this.availableIngredients[t]).cost<=this.actionPoints.current&&this.ingredientCounts[t]>0}hoverCard(t,e){e.stopPropagation();const n=e.target.parentElement;this.canPlay(t)?n.classList.add("canPlay"):n.classList.add("cantPlay")}unhoverCard(t){t.stopPropagation();const e=t.target.parentElement;e.classList.remove("canPlay"),e.classList.remove("cantPlay")}dragCard(t,e){if(e.stopPropagation(),this.canPlay(t)){this.currentlyDraggedIngredient=s.ingredients.get(this.availableIngredients[t]);for(const[t,e]of this.sandwiches)e.showIfValidTarget(this.currentlyDraggedIngredient);e.dataTransfer.setData("ingId",t.toString()),e.dataTransfer.dropEffect="copy",e.target.classList.add("dragging"),this.actionPoints.tentativeSpend(this.currentlyDraggedIngredient.cost)}else e.preventDefault()}stopDrag(t){t.stopPropagation(),t.target.classList.remove("dragging"),this.actionPoints.clearSpend();for(const[t,e]of this.sandwiches)e.clearTargetColors()}canDropCurrentlyHeld(t,e){this.sandwiches.get(t).canAddIngredient(this.currentlyDraggedIngredient)&&e.preventDefault()}dropHandler(t,e){e.stopPropagation();const n=e.dataTransfer.getData("ingId"),i=s.ingredients.get(this.availableIngredients[n]);this.sandwiches.get(t).addIngredient(i)&&(e.preventDefault(),this.ingredientCounts[n]--,this.actionPoints.spend(),this.render())}}e.LocalPlayer=r},627:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Player=void 0;const i=n(589),s=n(579);e.Player=class{constructor(){this.score=0,this.sandwichCount=0}deckSelectEndCallback(){}turnEndCallback(){}sandwichAnimationEndCallback(){}startDeckSelect(){}startGame(){}startTurn(){}getAnimationActions(){const t=[];for(const[e,n]of this.sandwiches)t.push(n),n.prepAnimate();return t}createEmptyStack(){if(this.sandwiches.size>=i.MAX_SANDWICH_COUNT)return null;const t=document.createElement("div"),e=new s.Sandwich(t,this.sandwichCount);return this.boardDiv.appendChild(t),e.sandwichStartedCallback=this.createEmptyStack.bind(this),e.animationDoneCallback=(n=>{e.isClosed&&(this.score+=e.score,this.scoreSpan.innerText=this.score.toString(),this.sandwiches.delete(n),this.sandwiches.size===i.MAX_SANDWICH_COUNT-1&&this.createEmptyStack(),t.remove()),this.sandwichAnimationEndCallback()}).bind(this,this.sandwiches.size),this.sandwiches.set(this.sandwichCount++,e),t}}},579:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Sandwich=void 0;const i=n(589),s=n(233),a=n(110);e.Sandwich=class{constructor(t,e){this.ingredients=[],this.spans=[],this.animateEvents=[];const n=document.createElement("div");n.innerText="Power: ",this.powerSpan=document.createElement("span"),this.powerSpan.innerText="0",n.appendChild(this.powerSpan),t.appendChild(n),this.ingredientDiv=document.createElement("div"),this.ingredientDiv.id="sandwich",t.appendChild(this.ingredientDiv),this.isClosed=!1,this.score=0,this.id=e}setScore(){this.score=0;for(const t of this.ingredients)this.score+=t.power;this.powerSpan.innerText=this.score.toString()}close(){this.isClosed=!0;for(const t of this.ingredients)t.effect(this)}canAddIngredient(t){return(0!==this.ingredients.length||t.type===s.IngredientType.BREAD)&&!this.isClosed}showIfValidTarget(t){this.canAddIngredient(t)?this.ingredientDiv.style.background="seagreen":this.ingredientDiv.style.background="tomato"}clearTargetColors(){this.ingredientDiv.style.background="lightgrey"}addIngredient(t){if(!this.canAddIngredient)return!1;const e=document.createElement("div"),n=document.createElement("span");n.textContent=t.name,e.appendChild(n),e.className="tooltip";const i=document.createElement("span");i.className="tooltipText",i.innerHTML=`${t.name}: ${t.cost}/${t.power}<br><br>`,""!==t.effectText&&(i.innerHTML+=`${t.effectText}<br><br>`),i.innerHTML+=`<i>${t.flavorText}</i>`,e.appendChild(i),this.ingredients.unshift((0,a.deepCopy)(t)),this.spans.push(n),this.ingredientDiv.insertBefore(e,this.ingredientDiv.firstChild);const r=new s.IngredientAddEvent;return r.name=t.name,r.span=n,this.animateEvents.push(r),t.type===s.IngredientType.CONDIMENT&&t.effect(this),1===this.ingredients.length?this.sandwichStartedCallback():t.type===s.IngredientType.BREAD&&(this.isClosed=!0),this.setScore(),!0}prepAnimate(){for(const t of this.animateEvents)t instanceof s.IngredientAddEvent&&(t.span.textContent="???")}animate(){if(0===this.animateEvents.length)this.animationDoneCallback();else{if(this.isClosed)for(let t=0;t<this.ingredients.length;++t){const e=new s.IngredientEffectEvent;e.ing=this.ingredients[t],e.span=this.spans[t],this.animateEvents.push(e)}setTimeout(this.animateInterval.bind(this,0),i.ANIM_TIMEOUT)}}animateInterval(t){const e=this.animateEvents[t];e instanceof s.IngredientAddEvent?e.span.textContent=e.name:e instanceof s.IngredientEffectEvent&&(e.span.style.fontWeight="bold",e.ing.effect(this),this.setScore()),t>=this.animateEvents.length-1?(this.animateEvents=[],this.animationDoneCallback()):setTimeout(this.animateInterval.bind(this,t+1),i.ANIM_TIMEOUT)}}},233:(t,e)=>{var n,i;Object.defineProperty(e,"__esModule",{value:!0}),e.IngredientEffectEvent=e.IngredientAddEvent=e.TurnState=e.IngredientType=void 0,function(t){t[t.BREAD=0]="BREAD",t[t.MEAT=1]="MEAT",t[t.VEGETABLE=2]="VEGETABLE",t[t.CONDIMENT=3]="CONDIMENT"}(n||(e.IngredientType=n={})),function(t){t[t.SELECTING_DECK=0]="SELECTING_DECK",t[t.TURN_ACTIVE=1]="TURN_ACTIVE",t[t.ANIMS_PLAYING=2]="ANIMS_PLAYING",t[t.GAME_END=3]="GAME_END"}(i||(e.TurnState=i={})),e.IngredientAddEvent=class{},e.IngredientEffectEvent=class{}},110:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.deepCopy=void 0,e.deepCopy=function t(e){if("object"!=typeof e)return e;const n={};for(const i in e)n[i]=t(e[i]);return n}}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var a=e[i]={exports:{}};return t[i](a,a.exports,n),a.exports}(()=>{const t=n(68),e=n(784),i=new(n(346).LocalPlayer)(document.getElementById("ingredients"),document.getElementById("myBoard"),document.getElementById("myScores")),s=new t.ComPlayer(document.getElementById("opponentBoard"),document.getElementById("opponentScores"));new e.Game([i,s])})()})();